// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineJudge.Database;

#nullable disable

namespace OnlineJudge.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240510182746_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("OnlineJudge.Models.Domain.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemoryLimitMB")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeLimitSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.Submission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AssignmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Compiler")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Submitted")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.SubmissionLibrary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryVersionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SubmissionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("SubmissionLibrary");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.SubmissionResult", b =>
                {
                    b.Property<Guid>("SubmissionResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AttemptedExecutionsCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExecutionStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Output")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubmissionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SubmissionId1")
                        .HasColumnType("TEXT");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubmissionResultId");

                    b.HasIndex("SubmissionId");

                    b.HasIndex("SubmissionId1")
                        .IsUnique();

                    b.ToTable("SubmissionResult");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineJudge.Parsing.TestCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AssignmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Input")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Lp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Output")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.ToTable("TestCase");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.Submission", b =>
                {
                    b.HasOne("OnlineJudge.Models.Domain.Assignment", "Assignment")
                        .WithMany("Submissions")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJudge.Models.Domain.User", "User")
                        .WithMany("Submissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.SubmissionLibrary", b =>
                {
                    b.HasOne("OnlineJudge.Models.Domain.Submission", null)
                        .WithMany("Libraries")
                        .HasForeignKey("SubmissionId");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.SubmissionResult", b =>
                {
                    b.HasOne("OnlineJudge.Models.Domain.Submission", "Submission")
                        .WithMany("Results")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJudge.Models.Domain.Submission", null)
                        .WithOne("Result")
                        .HasForeignKey("OnlineJudge.Models.Domain.SubmissionResult", "SubmissionId1");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("OnlineJudge.Parsing.TestCase", b =>
                {
                    b.HasOne("OnlineJudge.Models.Domain.Assignment", null)
                        .WithMany("TestCases")
                        .HasForeignKey("AssignmentId");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.Assignment", b =>
                {
                    b.Navigation("Submissions");

                    b.Navigation("TestCases");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.Submission", b =>
                {
                    b.Navigation("Libraries");

                    b.Navigation("Result");

                    b.Navigation("Results");
                });

            modelBuilder.Entity("OnlineJudge.Models.Domain.User", b =>
                {
                    b.Navigation("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
